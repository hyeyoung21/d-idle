# PostgreSQL 데이터베이스 설정
spring.datasource.url=jdbc:postgresql://didle-postgres.cza62w80k7mn.us-east-2.rds.amazonaws.com:5432/didle
spring.datasource.username=didle
spring.datasource.password=didle1234
spring.datasource.driver-class-name=org.postgresql.Driver

# PostgreSQL 데이터베이스 설정
#spring.datasource.url=jdbc:postgresql://localhost:5432/didle
#spring.datasource.username=didle
#spring.datasource.password=didle
#spring.datasource.driver-class-name=org.postgresql.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- Region 및 Bucket 설정은 유지 (환경 변수 또는 직접 값 사용 가능) ---
# SDK가 자동으로 환경 변수를 읽거나, application.properties 값을 사용합니다.
spring.cloud.aws.region.static=${AWS_REGION:us-east-2} # 환경 변수 우선, 없으면 기본값 사용
spring.cloud.aws.s3.bucket=${BUCKET_NAME:didle-service-data} # 환경 변수 사용

# 멀티파트 파일 업로드 제한
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false

# 관리 엔드포인트 및 Prometheus 설정
server.port=8080
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.scrape-enabled=true
management.endpoint.prometheus.enabled=true
