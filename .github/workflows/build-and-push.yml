name: Build and Push

permissions:
  id-token: write
  deployments: write
  contents: write
  statuses: write
  actions: write
  checks: read
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'build and push'  
        required: true
  push:
    branches: 
      - main

env:
  AWS_REGION: us-east-2
  WEB_ECR: didle-web
  WAS_ECR: didle-was
  HELM_CHART_PATH: ./helm-charts/didle
  BUCKET_NAME: didle-service-data

jobs:
  build-and-push:
#    if: |
#      (github.repository == 'D-idle/d-idle' && github.ref == 'refs/heads/main') ||
#      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout merged code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/didle-cicd-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Apache image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$WEB_ECR:$IMAGE_TAG web_static
          docker push $ECR_REGISTRY/$WEB_ECR:$IMAGE_TAG

      - name: Build with Gradle
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          BUCKET_NAME: ${{ env.BUCKET_NAME }}
        run: |
          cd backend/didle
          chmod +x ./gradlew
          ./gradlew build \
            -Dspring.cloud.aws.credentials.access-key=$AWS_ACCESS_KEY_ID \
            -Dspring.cloud.aws.credentials.secret-key=$AWS_SECRET_ACCESS_KEY \
            -Dspring.cloud.aws.region.static=$AWS_REGION \
            -Dspring.s3.bucket=$BUCKET_NAME

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$WAS_ECR:$IMAGE_TAG backend/didle
          docker push $ECR_REGISTRY/$WAS_ECR:$IMAGE_TAG

      - name: Save image tag as artifact
        run: |
          echo "${{ github.sha }}" > apache_image_tag.txt
          echo "${{ github.sha }}" > was_image_tag.txt

      - name: Upload image tags as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: image_tags
          path: |
            apache_image_tag.txt
            was_image_tag.txt

      - name: Update Helm chart
        run: |
          sed -i 's|repository:.*|repository: '${{ steps.login-ecr.outputs.registry }}'/'$ECR_REPOSITORY'|'       $HELM_CHART_PATH/values.yaml
          sed -i 's|tag:.*|tag: '${{ github.sha }}'|' $HELM_CHART_PATH/values.yaml
          sed -i 's|repository:.*apache|repository: '${{ steps.login-ecr.outputs.registry }}'/didle-web|'       $HELM_CHART_PATH/values.yaml

      - name: Commit and push if changed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add $HELM_CHART_PATH/values.yaml || exit 0
          git commit -m "Update image tag" || exit 0
          git push || exit 0
