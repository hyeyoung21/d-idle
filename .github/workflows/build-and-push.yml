# build-and-push.yml 최종 수정본 (call-deploy에 checkout 추가)

name: Build and Push

permissions:
  id-token: write
  deployments: write
  contents: read # checkout 위해 read 필요
  statuses: write
  actions: write # workflow_call 위해 필요
  checks: read
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'build and push'
        required: true
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  WEB_ECR: didle-web # 실제 ECR 리포지토리 이름 확인
  WAS_ECR: didle-was # 실제 ECR 리포지토리 이름 확인

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      apache_tag: ${{ steps.build_apache.outputs.apache_tag }}
      was_tag: ${{ steps.build_was.outputs.was_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ... (Set up JDK, Configure AWS, Login ECR, Build Apache, Build Gradle, Build WAS steps - 이전과 동일) ...

      - name: Build and push Apache image
        id: build_apache
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Apache image with tag: $IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$WEB_ECR:$IMAGE_TAG ./web_static # 경로 확인
          docker push $ECR_REGISTRY/$WEB_ECR:$IMAGE_TAG
          echo "apache_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Build with Gradle
        env:
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: |
          echo "Running Gradle build in $(pwd)/backend/didle/didle" # 경로 확인
          cd backend/didle/didle
          chmod +x ./gradlew
          ./gradlew build -PbucketName=$BUCKET_NAME

      - name: Build, tag, and push image to Amazon ECR (WAS)
        id: build_was
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building WAS image with tag: $IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$WAS_ECR:$IMAGE_TAG ./backend/didle/didle # 경로 확인
          docker push $ECR_REGISTRY/$WAS_ECR:$IMAGE_TAG
          echo "was_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

  # Deploy 워크플로우를 호출하는 Job
  call-deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      deployments: write
      contents: read # checkout 위해 read 필요
    steps:
      # --- !!! 이 Job에서도 Checkout 추가 !!! ---
      - name: Checkout code # 호출할 워크플로우 파일을 찾기 위해 필요
        uses: actions/checkout@v4

      - name: Call Deploy Workflow
        uses: ./.github/workflows/deploy.yml # 현재 레포의 deploy.yml 호출
        with:
          # build-and-push Job의 outputs를 inputs로 전달
          apache_image_tag: ${{ needs.build-and-push.outputs.apache_tag }}
          was_image_tag: ${{ needs.build-and-push.outputs.was_tag }}
        secrets: inherit # deploy.yml 이 secrets를 사용하므로 전달
