# build-and-push.yml 최종 수정본 (secrets 들여쓰기 재확인 및 수정)

name: Build and Push

permissions:
  id-token: write
  deployments: write
  contents: read
  statuses: write
  actions: write
  checks: read
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'build and push'
        required: true
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  WEB_ECR: didle-web
  WAS_ECR: didle-was

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      apache_tag: ${{ steps.build_apache.outputs.apache_tag }}
      was_tag: ${{ steps.build_was.outputs.was_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/didle-cicd-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Apache image
        id: build_apache
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Apache image with tag: $IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$WEB_ECR:$IMAGE_TAG ./web_static # 경로 확인
          docker push $ECR_REGISTRY/$WEB_ECR:$IMAGE_TAG
          echo "apache_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Build with Gradle
        env:
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: |
          echo "Running Gradle build in $(pwd)/backend/didle/didle" # 경로 확인
          cd backend/didle/didle
          chmod +x ./gradlew
          ./gradlew build -PbucketName=$BUCKET_NAME

      - name: Build, tag, and push image to Amazon ECR (WAS)
        id: build_was
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building WAS image with tag: $IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$WAS_ECR:$IMAGE_TAG ./backend/didle/didle # 경로 확인
          docker push $ECR_REGISTRY/$WAS_ECR:$IMAGE_TAG
          echo "was_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

  # Deploy 워크플로우를 호출하는 Job
  call-deploy:                 # Level 0
    needs: build-and-push      # Level 1 (2 spaces)
    runs-on: ubuntu-latest     # Level 1
    permissions:               # Level 1
      id-token: write          # Level 2 (4 spaces)
      deployments: write       # Level 2
      contents: read           # Level 2
    steps:                     # Level 1
      - name: Checkout code    # Level 2 (dash + 2 spaces)
        uses: actions/checkout@v4 # Level 3 (6 spaces)

      - name: Call Deploy Workflow # Level 2 (dash + 2 spaces)
        uses: ./.github/workflows/deploy.yml # Level 3 (6 spaces)
        with:                  # Level 3 (6 spaces) - 'uses'와 같은 레벨
          apache_image_tag: ${{ needs.build-and-push.outputs.apache_tag }} # Level 4 (8 spaces)
          was_image_tag: ${{ needs.build-and-push.outputs.was_tag }} # Level 4
